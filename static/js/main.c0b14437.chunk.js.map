{"version":3,"sources":["config.js","SingleVideo.js","Suggestions.js","Video.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","apiKey","detail","width","height","title","id","src","frameBorder","allow","allowFullScreen","description","videoList","changeSelection","selectedVideoId","length","map","data","ListGroup","Item","key","onClick","changeSelectedVideo","style","cursor","marginBottom","padding","display","alt","thumbnails","medium","url","paddingLeft","className","channel","youtube","YouTube","config","searchString","useState","setVideoList","selectedVideo","setSelectedVideo","useEffect","callApi","a","searchVideos","result","console","log","Col","xs","lg","SingleVideo","Suggestions","videoDetail","textAlign","href","App","searchTerm","setSearchTerm","passToChild","setPassToChild","onSubmit","event","preventDefault","Container","Form","Row","md","margin","Control","size","type","placeholder","onChange","target","value","flex","Button","variant","Video","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c0b14437.chunk.js","sourcesContent":["module.exports = {\n\tapiKey:\"AIzaSyDDWRxNXClWGVFfuOwnQMSzZvnqy51non4\"\n}","import React from 'react'\n\n\nexport default ({detail}) => {\n\n\treturn (\n\t\t\t<div>\n\t\t\t\t{detail && (\n\t\t\t\t<div>\n\t\t\t\t\t<iframe \n\t\t\t\t\twidth=\"100%\" \n\t\t\t\t\theight=\"500\"\n\t\t\t\t\ttitle={`${detail.id}`} \n\t\t\t\t\tsrc={`https://www.youtube.com/embed/${detail.id}`} \n\t\t\t\t\tframeBorder=\"0\" \n\t\t\t\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n\t\t\t\t\tallowFullScreen>\n\t\t\t\t\t</iframe>\n\t\t\t\t\t<h3>{detail.title}</h3>\n\t\t\t\t\t<p>{detail.description}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t</div>\n\t);\n};\n\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\n\n\nexport default ({videoList,changeSelection, selectedVideoId}) => {\n\n\tconst changeSelectedVideo = (data) => {\n\t\tchangeSelection(data)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{videoList.length > 0 ? \n\t\t\t\tvideoList.map(data => \n\t\t\t\t <ListGroup.Item\n\t\t\t\t    key={data.id} \n\t\t\t\t    onClick={() => changeSelectedVideo(data)} style={{cursor:'pointer'}}> \n\t\t\t\t\t<div\n\t\t\t\t\tstyle={{ marginBottom:10,padding:10,display: 'flex' }} >\n\t\t\t\t\t<div>\n\t\t\t\t\t  <img alt='videoList' src={data.thumbnails.medium.url} height=\"80px\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{paddingLeft:5}}>\n\t\t\t\t\t <div className=\"sugg-title\">{data.title}</div>\n\t\t\t\t\t <div className=\"sugg-channel\">{data.channel.title}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ListGroup.Item>\n\n\t\t\t):'No videos'}\n\t\t</>\n\t);\n};\n\n","import React, { useState, useEffect } from 'react'\nimport { Col, ListGroup } from 'react-bootstrap'\nimport SingleVideo from './SingleVideo'\nimport Suggestions from './Suggestions'\nimport YouTube from 'simple-youtube-api'\nimport config from './config'\n\nconst youtube = new YouTube(config.apiKey)\n\nexport default ({ searchString }) => {\n\n\tconst [videoList, setVideoList] = useState([])\n\tconst [selectedVideo, setSelectedVideo] = useState({})\n\n\tuseEffect(() => {\n\t\tcallApi();\n\t},[searchString])\n\n\tconst callApi = async () => {\n\t\t\tconst result = await youtube.searchVideos(searchString,10)\n\t\t\tconsole.log(result);\n\t\t\tsetSelectedVideo(result[0])\n\t\t\tsetVideoList(result)\n\t}\n\n\tconst selectedVideoCallback = (videoDetail) => {\n\t\tsetSelectedVideo(videoDetail)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Col xs={12} lg={8}>\n\t\t  \t<br />\n\n\t\t\t\t<SingleVideo detail={selectedVideo} />\n\t\t\t</Col>\n\t    \t<Col xs={12} lg={4}>\n\t    \t\t<ListGroup>\n\t    \t\t    <p>Suggestions</p>\n\t    \t\t\t<Suggestions \n\t\t    \t\t\tvideoList={videoList} \n\t\t    \t\t\tchangeSelection={selectedVideoCallback} \n\t\t    \t\t\tselectedVideoId={selectedVideo.id}\n\t    \t\t\t/>\n\t    \t\t</ListGroup>\n\t    \t</Col>\n\t\t</>\n\t)\n}\n\n","import React from 'react'\nimport {Col} from 'react-bootstrap'\n\nexport default () => {\n   return (\n   \t<Col>\n   \t\t<p style={{textAlign: 'center',padding:20}}>Made with <img width=\"20px\" alt=\"\" src='https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_coraz%C3%B3n.svg/1200px-Heart_coraz%C3%B3n.svg.png' /> by <a href='https://bharath-blog.herokuapp.com'>Bharath</a></p>\n    </Col>\n   )\n}\n","import React,{ useState } from 'react';\nimport './App.css';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport Video from './Video'\nimport Footer from './Footer'\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [passToChild, setPassToChild] = useState('')\n\n  const onSubmit = (event) => {\n  \tevent.preventDefault();\n  \tsetPassToChild(searchTerm);\n  }\n \n  return (\n  \t<div className=\"app\">\n\t  \t<Container>\n\t\t  <Form onSubmit={event => onSubmit(event)}>\n\t  \t\t<Form.Row className='search-box'>\n\t\t\t    <Col xs={12} md={2} style={{ margin:'auto' }}>\n\t\t\t      <img \n\t\t\t        src=\"https://www.freeiconspng.com/uploads/youtube-logo-png-picture-2.png\"\n\t\t\t        alt='logo'\n\t\t\t        width=\"100px\"\n\t\t\t        style={{ margin: 'auto' }}\n\t\t\t      />\n\t\t\t    </Col>\n\t\t\t    <Col md={5} xs={8}>\n\t\t    \t  <Form.Control \n\t\t\t    \t  size=\"lg\" \n\t\t\t    \t  type=\"text\" \n\t\t\t    \t  placeholder=\"Search\"\n\t\t\t    \t  onChange={event => setSearchTerm(event.target.value)} \n\t\t\t    \t  style={{ flex: 1 }}\n\t\t    \t/>\n\t\t\t    </Col>\n\t\t\t    <Col>\n\t\t\t      <Button \n\t\t\t      variant='primary' \n\t\t\t      size='lg'\n\t\t\t      onClick={event => onSubmit(event)}\n\t\t\t      >\n\t\t\t      \tSearch\n\t\t\t      </Button>\n\t\t\t    </Col>\n\t\t  \t</Form.Row>\n\t\t  </Form>\n\t\t  <Row>\n\t\t  \t<Video searchString={passToChild}/>\n\t\t  </Row>\n\t\t  <Row>\n\t\t  \t<Footer />\n\t\t  </Row>\n\t\t</Container>\n\t</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}